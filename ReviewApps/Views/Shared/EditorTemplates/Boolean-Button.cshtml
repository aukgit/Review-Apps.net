@model bool?
@{
    var isRequired = ViewData.ModelMetadata.IsRequired;
    string isRequiredStar = isRequired ? "*" : "",
           prop = ViewData.ModelMetadata.PropertyName,
           propLower = prop.ToLower(),
           styleProperty = propLower,
           displayName = ViewData.ModelMetadata.DisplayName ?? ViewData.ModelMetadata.PropertyName,
           description = ViewData.ModelMetadata.Description,
           templateName = "boolean-button";

    var htmlAttributes = new RouteValueDictionary();

    if (ViewBag.@class != null) {
        htmlAttributes.Add("class", ViewBag.@class);
    }
    if (ViewBag.type != null) {
        htmlAttributes.Add("type", ViewBag.type);
    }

    if (ViewBag.label != null) {
        displayName = ViewBag.label;
    }

    if (ViewBag.labelColumn == null) {
        ViewBag.labelColumn = "col-md-offset-2";
    }
    if (ViewBag.textColumn == null) {
        ViewBag.textColumn = "col-md-10";
    }

    if (ViewBag.placeholder != null) {
        htmlAttributes.Add("placeholder", ViewBag.placeholder);
    } else {
        if (isRequired) {
            htmlAttributes.Add("placeholder", displayName + isRequiredStar);
        } else {
            htmlAttributes.Add("placeholder", "[" + displayName + "]");
        }
    }

    htmlAttributes.Add("title", htmlAttributes["placeholder"]);

    htmlAttributes.Add("data-prop", styleProperty);
    htmlAttributes.Add("data-template", templateName);
}
<div class="form-row @styleProperty @templateName-type" data-prop="@styleProperty">
    <div class="dev-plugin">
        <div class="@ViewBag.textColumn @ViewBag.labelColumn">
            <div class="checkbox">
                <label class="form-input" for="@styleProperty">
                    @Html.CheckBox("", Model.HasValue && Model.Value, htmlAttributes)
                    @displayName
                </label>
                @if (description != null) {
                    <a data-toggle="tooltip" data-original-title="@description" title="@description" class="tooltip-show">
                        <span class="description-icon"></span>
                    </a>
                }
                @Html.ValidationMessageFor(m => m, null, new {@class = "invalid-input"})
            </div>
        </div>
    </div>
</div>