@model Feedback

@{
    ViewBag.Title = "Creating Feedback";
    string title = ViewBag.Title;
    string subtitle = ViewBag.Title;
    var token = @Html.AntiForgeryToken();
    var controller = (string) ViewBag.controller;
    const string viewName = "Create";
    var dropDownDynamic = (bool) ViewBag.dropDownDynamic;
    string partialController = ViewBag.dynamicLoadPartialController;
}


@Html.SamePageLinkWithIcon(title, subtitle, "glyphicon glyphicon-plus-sign")
<div class="top-gap-2x"></div>
<hr />
@using (Html.BeginForm(viewName, controller, FormMethod.Post, new {@class = "form-horizontal Create-@ViewBag.Title", role = "form"})) {
    <div class="form-horizontal">
        @token
        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                <div class="btn-group">
                    <a href="@Url.Action("Index")" title="Back" class="btn btn-info dev-btn-back"><span class="glyphicon glyphicon-chevron-left"></span> Back</a>
                    <div class="inline input-group-btn">
                        <button class="btn btn-success" title="Save and create a new one."><i class="glyphicon glyphicon-plus"></i> Create</button>
                    </div>
                </div>
            </div>
        </div>
        @Html.Partial("_SuccessMessage")


        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        @Html.EditorFor(model => model.Username)
        @Html.EditorFor(model => model.Name)
        @Html.EditorFor(model => model.Subject)
        @Html.EditorFor(model => model.Message)
        @Html.EditorFor(model => model.Email)
        @Html.EditorFor(model => model.RateUrgency)
        @Html.EditorFor(model => model.Response)
        @Html.EditorFor(model => model.IsViewed)
        @Html.EditorFor(model => model.IsInProcess)
        @Html.EditorFor(model => model.IsSolved)
        @Html.EditorFor(model => model.IsUnSolved)
        @Html.EditorFor(model => model.HasMarkedToFollowUpDate)
        @Html.EditorFor(model => model.PostedDate)
        @Html.EditorFor(model => model.FollowUpdateDate)
        @Html.EditorFor(model => model.HasAppOrReviewReport)
        @Html.EditorFor(model => model.FeedbackCategoryID)

        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                <div class="btn-group">
                    <a href="@Url.Action("Index")" title="Back" class="btn btn-info dev-btn-back"><span class="glyphicon glyphicon-chevron-left"></span> Back</a>
                    <div class="inline input-group-btn">
                        <button class="btn btn-success" title="Save and create a new one."><i class="glyphicon glyphicon-plus"></i> Create</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@Html.Partial("_ValidatorCommonForm", new ViewDataDictionary {
    {"token", token}
})
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}